name: 'Code quality'
description: 'Checking code quality'
inputs:
  python-version:
    description: Input python version installing
    required: true
    default: '3.9'
  aws-username:
    description: Input aws username to access aws bucket
    required: true
  aws-password:
    description: Input aws password to access aws bucket
    required: true
  working-dir:
    description: Input ci token to access gitlab repo
    required: true

runs:
  using: composite
  steps:
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
        cache: 'poetry'
    - name: Install poetry
      shell: bash
      run: pip install poetry
    - name: Run config token
      shell: bash
      run: poetry config http-basic.typless ${{ inputs.aws-username }} ${{ inputs.aws-password }}
    - name: Install dependencies
      shell: bash
      run: poetry install
      working-directory:  ${{ inputs.working-dir }}
    - name: Run black
      shell: bash
      run: poetry run black . --check
      working-directory: ${{ inputs.working-dir }}
    - name: Run isort
      shell: bash
      run: poetry run isort . --check-only --profile black
      working-directory: ${{ inputs.working-dir }}
    - name: Run flake8
      shell: bash
      run: poetry run flake8 .
      working-directory:  ${{ inputs.working-dir }}
    - name: Run bandit
      shell: bash
      run: poetry run bandit .
      working-directory:  ${{ inputs.working-dir }}
    - name: Run safety check
      shell: bash
      run: poetry run safety check || true
