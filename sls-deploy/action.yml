name: 'Sls deploy'
description: 'Deploying serverless'
inputs:
  python-version:
    description: Input python version installing
    required: true
  aws-username:
    description: Input aws username to access aws bucket
    required: true
  aws-password:
    description: Input aws password to access aws bucket
  working-dir:
    description: Input working directory
    required: true
  node-version:
    description: Input node version installing
    required: true
  stage:
    description: Stage where to deploy
    required: true
  run-poetry-export:
    description: Poetry export has to be run on some deploys (boolean)
    required: false
runs:

  using: composite
  steps:
    - name: Install poetry
      run: pipx install poetry
      shell: bash
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
        cache: 'poetry'
    - name: Run config token
      shell: bash
      run: poetry config http-basic.typless ${{ inputs.aws-username }} ${{ inputs.aws-password }}
      working-directory: ${{ inputs.working-dir }}
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node-version}}
        cache: 'yarn'
        cache-dependency-path: ${{ inputs.working-dir }}/yarn.lock
    - run: yarn install --frozen-lockfile
      working-directory: ${{ inputs.working-dir }}
      shell: bash
    - name: DEBUGLOG
        DEBUG: ${{ github.event.inputs.run-poetry-export }}
      run: echo ${{ github.event.inputs.run-poetry-export }}
      shell: bash
    - name: Poetry export
      if: "${{ github.event.inputs.run-poetry-export != '' }}"
      run: poetry export --without-hashes --with-credentials -f requirements.txt > requirements.txt
      shell: bash
    #- name: Deploy
     # run: yarn run sls deploy --verbose --stage  ${{ inputs.stage }}
      #working-directory: ${{ inputs.working-dir }}
      #shell: bash
