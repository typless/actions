name: 'Run Tests'
description: 'Runnning tests'
inputs:
  python-version:
    description: Input python version installing
    required: true
    default: '3.9'
  aws-username:
    description: Input aws username to access aws bucket
    required: true
  aws-password:
    description: Input aws password to access aws bucket
  working-dir:
    description: input working directory
    required: true
  test-args:
    description: Arguments added to pytest
    required: true
  poetry-virtualenvs:
    description: Set to true if poetry should use virtualenvs.in-project
    required: false
  coverage-report-path:
    description: Set path to save coverage report. If left empty no report will be saved
    required: false

runs:

  using: composite
  steps:
    - name: Install poetry
      run: pipx install poetry
      shell: bash
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
        cache: 'poetry'
    - name: Set Poetry environment
      shell: bash
      run: poetry env use ${{ inputs.python-version }}
      working-directory:  ${{ inputs.working-dir }}
    - name: Run config token
      shell: bash
      run: poetry config http-basic.typless ${{ inputs.aws-username }} ${{ inputs.aws-password }}
      working-directory:  ${{ inputs.working-dir }}
    - name: Set poetry virtualenvs
      if: "${{ inputs.poetry-virtualenvs != '' }}"
      shell: bash
      run: poetry config virtualenvs.in-project true
      working-directory:  ${{ inputs.working-dir }}
    - name: Install dependencies
      shell: bash
      run: poetry install
      working-directory: ${{ inputs.working-dir }}
    - name: Run tests
      shell: bash
      working-directory: ${{ inputs.working-dir }}
      run: poetry run pytest ${{ inputs.test-args }}
    - name: Archive test results
      if: "${{ inputs.coverage-report-path != '' }}"
      uses: actions/upload-artifact@v3
      with:
        name: test-report
        path:  ${{ inputs.coverage-report-path }}
        retention-days: 5
